name: CI

on: [push]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Check out the repo
        run: |
          rm -rf diatoz_assinment
          git clone https://github.com/vinaybv77716/diatoz_assinment.git

      - name: Check and install Docker if not present
        run: |
          if ! command -v docker &> /dev/null
          then
            echo "Docker not found. Installing Docker..."
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl gnupg
            sudo install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            echo \
              "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
              $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          else
            echo "Docker is already installed"
          fi

      - name: Check and install AWS CLI if not present
        run: |
          if ! command -v aws &> /dev/null
          then
            echo "AWS CLI not found. Installing AWS CLI..."
            sudo apt install unzip -y
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          else
            echo "AWS CLI is already installed"
          fi
      - name: Clean up dangling images
        run: sudo apt update
      - name: Configure AWS-cli
        run: |
          # aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && \
          # aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} && \
          # aws configure set default.region ${{ secrets.AWS_REGION }} && \
          # aws configure set output json
          echo "#######  testing  #######"
          aws s3 ls

      - name: build docker image and push to ecr repo
        run: |
          # sudo apt update
          # sudo chown $USER /var/run/docker.sock
          # aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 890405391444.dkr.ecr.us-east-1.amazonaws.com
          # docker build -t nodeproj diatoz_assinment/.
          # docker tag nodeproj:latest 890405391444.dkr.ecr.us-east-1.amazonaws.com/nodeproj:latest
          docker push 890405391444.dkr.ecr.us-east-1.amazonaws.com/nodeproj:latest          
