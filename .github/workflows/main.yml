name: Clone Repos
on: [push]
jobs:
  clone:
    runs-on: self-hosted
    steps:
      - name: Clone kool repoo
        run: |
          git clone https://github.com/vinaybv77716/kool.git
      - name: Clone terraform-eks repo
        run: |
          git clone https://github.com/vinaybv77716/terraform-eks.git     
      - name: Check and install Terraform if not present
        run: |
          if ! command -v terraform &> /dev/null
          then
            echo "Terraform not found. Installing Terraform..."
            sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
            curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt-get update && sudo apt-get install terraform -y
          else
            echo "Terraform is already installed"
          fi
      - name: Check and install Docker if not present
        run: |
          if ! command -v docker &> /dev/null
          then
            echo "Docker not found. Installing Docker..."
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl gnupg
            sudo install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            echo \
              "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
              $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          else
            echo "Docker is already installed"
          fi
      - name: Check and install AWS CLI if not present
        run: |
          if ! command -v aws &> /dev/null
          then
            echo "AWS CLI not found. Installing AWS CLI..."
            sudo apt install unzip -y
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          else
            echo "AWS CLI is already installed"
          fi      
      - name: Configure AWS CLI
        run: |
          echo "aws configure"
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set default.region "us-east-1"
          aws configure set output json
          echo "#######  testing  #######"
          # aws s3 ls  
      - name: build docker image and push to ecr repo
        run: |
          sudo apt update
          sudo chown $USER /var/run/docker.sock
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 200901485389.dkr.ecr.us-east-1.amazonaws.com
          docker build -t kool-vinay kool/.
          docker tag kool-vinay:latest 200901485389.dkr.ecr.us-east-1.amazonaws.com/kool-vinay:latest
          docker push 200901485389.dkr.ecr.us-east-1.amazonaws.com/kool-vinay:latest 
          docker rmi 200901485389.dkr.ecr.us-east-1.amazonaws.com/kool-vinay:latest 
      - name: terraform initialization 
        run: |
         cd terraform-eks/ && terraform init 
         terraform plan
